/* ftconfig.h.  Generated by configure, then edited by hand  */
/* the only variable part in the header are sizeof int and sizeof long */
/* POSIX demands that int is always 4 bytes, so we hardcode that. */
/* we derive sizeof long from the cpp macro __SIZEOF_LONG__ which should be */
/* defined by all modern GCCs and compatibles. for other compilers lacking it */
/* limits.h is included and LONG_MAX is checked to define whether long is 4 or */
/* 8 bytes. there's no other possible choice in POSIX conforming systems. */
/*************************************************************************/


#ifndef __FTCONFIG_H__
#define __FTCONFIG_H__

#include "engines/ags/lib/freetype-2.1.3/include/ft2build.h"
#include FT2_1_3_CONFIG_OPTIONS_H
#include FT2_1_3_CONFIG_STANDARD_LIBRARY_H


FT2_1_3_BEGIN_HEADER


  /*************************************************************************/
  /*                                                                       */
  /*               PLATFORM-SPECIFIC CONFIGURATION MACROS                  */
  /*                                                                       */
  /* These macros can be toggled to suit a specific system.  The current   */
  /* ones are defaults used to compile FreeType in an ANSI C environment   */
  /* (16bit compilers are also supported).  Copy this file to your own     */
  /* `freetype/builds/<system>' directory, and edit it to port the engine. */
  /*                                                                       */
  /*************************************************************************/


#define HAVE_UNISTD_H 1
#define HAVE_FCNTL_H 1

#define SIZEOF_INT 4

#ifdef __SIZEOF_LONG__
#define SIZEOF_LONG __SIZEOF_LONG__
#else
#include <limits.h>
#if LONG_MAX > 0x7fffffff
#define SIZEOF_LONG 8
#else
#define SIZEOF_LONG 4
#endif
#endif

#define FT2_1_3_SIZEOF_INT   SIZEOF_INT
#define FT2_1_3_SIZEOF_LONG  SIZEOF_LONG


  /* Preferred alignment of data */
#define FT2_1_3_ALIGNMENT  8


  /* FT2_1_3_UNUSED is a macro used to indicate that a given parameter is not  */
  /* used -- this is only used to get rid of unpleasant compiler warnings */
#ifndef FT2_1_3_UNUSED
#define FT2_1_3_UNUSED( arg )  ( (arg) = (arg) )
#endif


  /*************************************************************************/
  /*                                                                       */
  /*                     AUTOMATIC CONFIGURATION MACROS                    */
  /*                                                                       */
  /* These macros are computed from the ones defined above.  Don't touch   */
  /* their definition, unless you know precisely what you are doing.  No   */
  /* porter should need to mess with them.                                 */
  /*                                                                       */
  /*************************************************************************/


  /*************************************************************************/
  /*                                                                       */
  /* IntN types                                                            */
  /*                                                                       */
  /*   Used to guarantee the size of some specific integers.               */
  /*                                                                       */
  typedef signed short    FT2_1_3_Int16;
  typedef unsigned short  FT2_1_3_UInt16;

#if FT2_1_3_SIZEOF_INT == 4

  typedef signed int      FT2_1_3_Int32;
  typedef unsigned int    FT2_1_3_UInt32;

#elif FT2_1_3_SIZEOF_LONG == 4

  typedef signed long     FT2_1_3_Int32;
  typedef unsigned long   FT2_1_3_UInt32;

#else
#error "no 32bit type found -- please check your configuration files"
#endif

#if FT2_1_3_SIZEOF_LONG == 8

  /* FT2_1_3_LONG64 must be defined if a 64-bit type is available */
#define FT2_1_3_LONG64
#define FT2_1_3_INT64   long

#else

  /*************************************************************************/
  /*                                                                       */
  /* Many compilers provide the non-ANSI `long long' 64-bit type.  You can */
  /* activate it by defining the FTCALC_USE_LONG_LONG macro in             */
  /* `ftoption.h'.                                                         */
  /*                                                                       */
  /* Note that this will produce many -ansi warnings during library        */
  /* compilation, and that in many cases,  the generated code will be      */
  /* neither smaller nor faster!                                           */
  /*                                                                       */
#ifdef FTCALC_USE_LONG_LONG

#define FT2_1_3_LONG64
#define FT2_1_3_INT64   long long

#endif /* FTCALC_USE_LONG_LONG */
#endif /* FT2_1_3_SIZEOF_LONG == 8 */


#ifdef FT2_1_3_MAKE_OPTION_SINGLE_OBJECT

#define FT2_1_3_LOCAL( x )      static  x
#define FT2_1_3_LOCAL_DEF( x )  static  x

#else

#ifdef __cplusplus
#define FT2_1_3_LOCAL( x )      extern "C"  x
#define FT2_1_3_LOCAL_DEF( x )  extern "C"  x
#else
#define FT2_1_3_LOCAL( x )      extern  x
#define FT2_1_3_LOCAL_DEF( x )  extern  x
#endif

#endif /* FT2_1_3_MAKE_OPTION_SINGLE_OBJECT */


#ifndef FT2_1_3_BASE

#ifdef __cplusplus
#define FT2_1_3_BASE( x )  extern "C"  x
#else
#define FT2_1_3_BASE( x )  extern  x
#endif

#endif /* !FT2_1_3_BASE */


#ifndef FT2_1_3_BASE_DEF

#ifdef __cplusplus
#define FT2_1_3_BASE_DEF( x )  extern "C"  x
#else
#define FT2_1_3_BASE_DEF( x )  extern  x
#endif

#endif /* !FT2_1_3_BASE_DEF */


#ifndef FT2_1_3_EXPORT

#ifdef __cplusplus
#define FT2_1_3_EXPORT( x )  extern "C"  x
#else
#define FT2_1_3_EXPORT( x )  extern  x
#endif

#endif /* !FT2_1_3_EXPORT */


#ifndef FT2_1_3_EXPORT_DEF

#ifdef __cplusplus
#define FT2_1_3_EXPORT_DEF( x )  extern "C"  x
#else
#define FT2_1_3_EXPORT_DEF( x )  extern  x
#endif

#endif /* !FT2_1_3_EXPORT_DEF */


#ifndef FT2_1_3_EXPORT_VAR

#ifdef __cplusplus
#define FT2_1_3_EXPORT_VAR( x )  extern "C"  x
#else
#define FT2_1_3_EXPORT_VAR( x )  extern  x
#endif

#endif /* !FT2_1_3_EXPORT_VAR */

  /* The following macros are needed to compile the library with a   */
  /* C++ compiler and with 16bit compilers.                          */
  /*                                                                 */

  /* This is special.  Within C++, you must specify `extern "C"' for */
  /* functions which are used via function pointers, and you also    */
  /* must do that for structures which contain function pointers to  */
  /* assure C linkage -- it's not possible to have (local) anonymous */
  /* functions which are accessed by (global) function pointers.     */
  /*                                                                 */
  /*                                                                 */
  /* FT2_1_3_CALLBACK_DEF is used to _define_ a callback function.        */
  /*                                                                 */
  /* FT2_1_3_CALLBACK_TABLE is used to _declare_ a constant variable that */
  /* contains pointers to callback functions.                        */
  /*                                                                 */
  /* FT2_1_3_CALLBACK_TABLE_DEF is used to _define_ a constant variable   */
  /* that contains pointers to callback functions.                   */
  /*                                                                 */
  /*                                                                 */
  /* Some 16bit compilers have to redefine these macros to insert    */
  /* the infamous `_cdecl' or `__fastcall' declarations.             */
  /*                                                                 */
#ifndef FT2_1_3_CALLBACK_DEF
#ifdef __cplusplus
#define FT2_1_3_CALLBACK_DEF( x )  extern "C"  x
#else
#define FT2_1_3_CALLBACK_DEF( x )  static  x
#endif
#endif /* FT2_1_3_CALLBACK_DEF */

#ifndef FT2_1_3_CALLBACK_TABLE
#ifdef __cplusplus
#define FT2_1_3_CALLBACK_TABLE      extern "C"
#define FT2_1_3_CALLBACK_TABLE_DEF  extern "C"
#else
#define FT2_1_3_CALLBACK_TABLE      extern
#define FT2_1_3_CALLBACK_TABLE_DEF  /* nothing */
#endif
#endif /* FT2_1_3_CALLBACK_TABLE */


FT2_1_3_END_HEADER

#endif /* __FTCONFIG_H__ */


/* END */
